{
  "openapi": "3.0.3",
  "servers": [
    {
      "url": "https://moviesrest.opnfuso.dev",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local dev server"
    }
  ],
  "info": {
    "title": "Movies REST",
    "version": "1.0.0"
  },
  "paths": {
    "/movies": {
      "get": {
        "summary": "List all movies",
        "tags": ["Movies"],
        "responses": {
          "200": {
            "description": "The list of all movies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Post a new movie",
        "tags": ["Movies"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMovie"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The id of the created movie",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "The data of the request"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message of the request"
                    }
                  },
                  "example": {
                    "data": "6106c5de20b843a04063d8c8",
                    "message": "movie created"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "example": "\"year\" must be a number"
              }
            }
          }
        }
      }
    },
    "/movies/{movieId}": {
      "get": {
        "summary": "Get the movie by id",
        "tags": ["Movies"],
        "parameters": [
          {
            "in": "path",
            "name": "movieId",
            "schema": {
              "type": "string",
              "example": "61058c3d2d56c2335824054f"
            },
            "required": true,
            "description": "string id of the movie to get"
          }
        ],
        "responses": {
          "200": {
            "description": "The movie of the id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Movie"
                    },
                    "message": {
                      "type": "string",
                      "example": "movie retrieved"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad id",
            "content": {
              "text/plain": {
                "example": "\"movieId\" with value \"61058c3d2d56c2335824054\" fails to match the required pattern: /^[0-9a-fA-F]{24}$/"
              }
            }
          },
          "404": {
            "description": "Movie not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "movie not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Modify the movie by id",
        "tags": ["Movies"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovie"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "movieId",
            "schema": {
              "type": "string",
              "example": "61058c3d2d56c2335824054f"
            },
            "required": true,
            "description": "string id of the movie to get"
          }
        ],
        "responses": {
          "200": {
            "description": "The movie of the id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "example": "61058c3d2d56c2335824054f"
                    },
                    "message": {
                      "type": "string",
                      "example": "movie updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad id",
            "content": {
              "text/plain": {
                "example": "\"movieId\" with value \"61058c3d2d56c2335824054\" fails to match the required pattern: /^[0-9a-fA-F]{24}$/"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the movie by id",
        "tags": ["Movies"],
        "parameters": [
          {
            "in": "path",
            "name": "movieId",
            "schema": {
              "type": "string",
              "example": "61058c3d2d56c2335824054f"
            },
            "required": true,
            "description": "string id of the movie to get"
          }
        ],
        "responses": {
          "200": {
            "description": "The movie of the id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "example": "61058c3d2d56c2335824054f"
                    },
                    "message": {
                      "type": "string",
                      "example": "movie deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad id",
            "content": {
              "text/plain": {
                "example": "\"movieId\" with value \"61058c3d2d56c2335824054\" fails to match the required pattern: /^[0-9a-fA-F]{24}$/"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Movie": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The auto-generated id of the movie"
          },
          "title": {
            "type": "string",
            "maxLength": 80,
            "description": "The title of the movie"
          },
          "year": {
            "type": "number",
            "minimum": 1888,
            "maximum": 2070,
            "description": "The year of the movie"
          },
          "cover": {
            "type": "string",
            "format": "uri",
            "description": "The url of the movie cover"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "The description of the movie"
          },
          "duration": {
            "type": "number",
            "minimum": 1,
            "maximum": 1440,
            "description": "The duration of the movie in minutes"
          },
          "contentRating": {
            "type": "string",
            "description": "The content rating of the movie"
          },
          "tags": {
            "type": "string",
            "description": "the tags of the movie"
          }
        },
        "example": {
          "_id": "61058c3d2d56c2335824054f",
          "title": "Viridiana",
          "year": 1919,
          "cover": "http://dummyimage.com/153x100.png/ff4444/ffffff",
          "description": "Curabitur in libero ut massa volutpat convallis. Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est.",
          "duration": 987,
          "contentRating": "G",
          "tags": "Comedy|Drama"
        }
      },
      "CreateMovie": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 80,
            "description": "The title of the movie"
          },
          "year": {
            "type": "number",
            "minimum": 1888,
            "maximum": 2070,
            "description": "The year of the movie"
          },
          "cover": {
            "type": "string",
            "format": "uri",
            "description": "The url of the movie cover"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "The description of the movie"
          },
          "duration": {
            "type": "number",
            "minimum": 1,
            "maximum": 1440,
            "description": "The duration of the movie in minutes"
          },
          "contentRating": {
            "type": "string",
            "description": "The content rating of the movie"
          },
          "tags": {
            "type": "string",
            "description": "the tags of the movie"
          }
        },
        "required": [
          "title",
          "year",
          "cover",
          "description",
          "duration",
          "contentRating"
        ],
        "example": {
          "title": "Viridiana",
          "year": 1919,
          "cover": "http://dummyimage.com/153x100.png/ff4444/ffffff",
          "description": "Curabitur in libero ut massa volutpat convallis. Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est.",
          "duration": 987,
          "contentRating": "G",
          "tags": "Comedy|Drama"
        }
      },
      "UpdateMovie": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 80,
            "description": "The title of the movie"
          },
          "year": {
            "type": "number",
            "minimum": 1888,
            "maximum": 2070,
            "description": "The year of the movie"
          },
          "cover": {
            "type": "string",
            "format": "uri",
            "description": "The url of the movie cover"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "The description of the movie"
          },
          "duration": {
            "type": "number",
            "minimum": 1,
            "maximum": 1440,
            "description": "The duration of the movie in minutes"
          },
          "contentRating": {
            "type": "string",
            "description": "The content rating of the movie"
          },
          "tags": {
            "type": "string",
            "description": "the tags of the movie"
          }
        },
        "example": {
          "title": "The best movie in the world"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Movies"
    }
  ]
}
